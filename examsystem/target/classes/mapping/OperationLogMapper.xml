<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.db.dao.OperationLogMapper" >
  <resultMap id="BaseResultMap" type="com.db.model.OperationLog" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="table_name" property="tableName" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="operation_type" property="operationType" jdbcType="VARCHAR" />
    <result column="information" property="information" jdbcType="VARCHAR" />
    <result column="operation_time" property="operationTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    order_id, table_name, user_id, operation_type, information, operation_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from operation_log
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from operation_log
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.db.model.OperationLog" >
    insert into operation_log (order_id, table_name, user_id, 
      operation_type, information, operation_time
      )
    values (#{orderId,jdbcType=INTEGER}, #{tableName,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{operationType,jdbcType=VARCHAR}, #{information,jdbcType=VARCHAR}, #{operationTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.db.model.OperationLog" >
    insert into operation_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="tableName != null" >
        table_name,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="operationType != null" >
        operation_type,
      </if>
      <if test="information != null" >
        information,
      </if>
      <if test="operationTime != null" >
        operation_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="tableName != null" >
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="operationType != null" >
        #{operationType,jdbcType=VARCHAR},
      </if>
      <if test="information != null" >
        #{information,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null" >
        #{operationTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.db.model.OperationLog" >
    update operation_log
    <set >
      <if test="tableName != null" >
        table_name = #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="operationType != null" >
        operation_type = #{operationType,jdbcType=VARCHAR},
      </if>
      <if test="information != null" >
        information = #{information,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null" >
        operation_time = #{operationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.db.model.OperationLog" >
    update operation_log
    set table_name = #{tableName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      operation_type = #{operationType,jdbcType=VARCHAR},
      information = #{information,jdbcType=VARCHAR},
      operation_time = #{operationTime,jdbcType=TIMESTAMP}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>