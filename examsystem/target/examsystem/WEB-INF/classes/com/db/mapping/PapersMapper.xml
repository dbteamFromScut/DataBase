<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.db.dao.PapersMapper" >
  <resultMap id="BaseResultMap" type="com.db.model.Papers" >
    <id column="paper_id" property="paperId" jdbcType="INTEGER" />
    <result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
    <result column="paper_name" property="paperName" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="stop_time" property="stopTime" jdbcType="TIMESTAMP" />
    <result column="class_grade" property="classGrade" jdbcType="CHAR" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    paper_id, teacher_id, paper_name, start_time, stop_time, class_grade, class_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from papers
    where paper_id = #{paperId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from papers
    where paper_id = #{paperId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.db.model.Papers" >
    insert into papers (paper_id, teacher_id, paper_name, 
      start_time, stop_time, class_grade, 
      class_name)
    values (#{paperId,jdbcType=INTEGER}, #{teacherId,jdbcType=VARCHAR}, #{paperName,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{stopTime,jdbcType=TIMESTAMP}, #{classGrade,jdbcType=CHAR}, 
      #{className,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.db.model.Papers" >
    insert into papers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="paperId != null" >
        paper_id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="paperName != null" >
        paper_name,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="stopTime != null" >
        stop_time,
      </if>
      <if test="classGrade != null" >
        class_grade,
      </if>
      <if test="className != null" >
        class_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="paperId != null" >
        #{paperId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="paperName != null" >
        #{paperName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stopTime != null" >
        #{stopTime,jdbcType=TIMESTAMP},
      </if>
      <if test="classGrade != null" >
        #{classGrade,jdbcType=CHAR},
      </if>
      <if test="className != null" >
        #{className,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.db.model.Papers" >
    update papers
    <set >
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="paperName != null" >
        paper_name = #{paperName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stopTime != null" >
        stop_time = #{stopTime,jdbcType=TIMESTAMP},
      </if>
      <if test="classGrade != null" >
        class_grade = #{classGrade,jdbcType=CHAR},
      </if>
      <if test="className != null" >
        class_name = #{className,jdbcType=VARCHAR},
      </if>
    </set>
    where paper_id = #{paperId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.db.model.Papers" >
    update papers
    set teacher_id = #{teacherId,jdbcType=VARCHAR},
      paper_name = #{paperName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      stop_time = #{stopTime,jdbcType=TIMESTAMP},
      class_grade = #{classGrade,jdbcType=CHAR},
      class_name = #{className,jdbcType=VARCHAR}
    where paper_id = #{paperId,jdbcType=INTEGER}
  </update>
</mapper>