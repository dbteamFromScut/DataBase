/*
SQLyog Ultimate v12.08 (64 bit)
MySQL - 5.7.23-log : Database - examsystem
*********************************************************************
*/


/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`examsystem` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `examsystem`;

/*Table structure for table `deans` */
/*管理员表格*/
DROP TABLE IF EXISTS `deans`;

CREATE TABLE `deans` (
  `dean_id` varchar(20) NOT NULL,
  `dean_name` varchar(20) DEFAULT NULL,
  `dean_password` varchar(20) DEFAULT NULL,
  `sex` varchar(2) DEFAULT NULL,
  `institute` varchar(20) DEFAULT NULL,
  `address` varchar(200) DEFAULT NULL,
  `birthdate` date DEFAULT NULL,
  `phone` varchar(11) DEFAULT NULL,
  `e_mail` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`dean_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `deans` */

insert  into `deans`(`dean_id`,`dean_name`,`dean_password`,`sex`,`institute`,`address`,`birthdate`,`phone`,`e_mail`) values ('123',NULL,'111111',NULL,NULL,NULL,NULL,NULL,NULL),('5317823891725','早早','666666','女','计算机科学与工程学院','华南理工大学大学城校区D2-225','1978-03-18','14684625683','zaozao@edu.scut.com\r');

/*Table structure for table `operation_log` */

DROP TABLE IF EXISTS `operation_log`;

CREATE TABLE `operation_log` (
  `order_id` int(11) NOT NULL,
  `table_name` varchar(20) DEFAULT NULL,
  `user_id` varchar(20) DEFAULT NULL,
  `operation_type` varchar(10) DEFAULT NULL,
  `information` varchar(500) DEFAULT NULL,
  `operation_time` datetime DEFAULT NULL,
  PRIMARY KEY (`order_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `operation_log` */

/*Table structure for table `papers` */

DROP TABLE IF EXISTS `papers`;

CREATE TABLE `papers` (
  `paper_id` int(11) NOT NULL,
  `teacher_id` varchar(20) DEFAULT NULL,
  `paper_name` varchar(50) DEFAULT NULL,
  `start_time` datetime DEFAULT NULL,
  `stop_time` datetime DEFAULT NULL,
  `class_grade` char(5) DEFAULT NULL,
  `class_name` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`paper_id`),
  KEY `teacher_id` (`teacher_id`),
  CONSTRAINT `papers_ibfk_1` FOREIGN KEY (`teacher_id`) REFERENCES `teachers` (`teacher_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `papers` */

insert  into `papers`(`paper_id`,`teacher_id`,`paper_name`,`start_time`,`stop_time`,`class_grade`,`class_name`) values (1,'3561782890912','第一章至第三章','2018-12-06 09:30:00','2018-12-06 10:00:00','2016级','计算机联合班'),(2,'3561782890912','第四章至第六章','2018-12-07 09:30:00','2018-12-07 10:00:00','2016级','计算机联合班'),(3,'3561782890912','第七章至第十一章','2018-12-08 09:30:00','2018-12-08 10:00:00','2016级','计算机联合班');

/*Table structure for table `questions` */

DROP TABLE IF EXISTS `questions`;

CREATE TABLE `questions` (
  `question_id` int(11) NOT NULL,
  `chapter` int(11) DEFAULT NULL,
  `test_type` char(3) DEFAULT NULL,
  `question` varchar(500) DEFAULT NULL,
  `option1` varchar(150) DEFAULT NULL,
  `option2` varchar(150) DEFAULT NULL,
  `option3` varchar(150) DEFAULT NULL,
  `option4` varchar(150) DEFAULT NULL,
  `correct_answer` varchar(150) DEFAULT NULL,
  `answer_num` int(11) DEFAULT '0',
  `correct_num` int(11) DEFAULT '0',
  PRIMARY KEY (`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `questions` */

insert  into `questions`(`question_id`,`chapter`,`test_type`,`question`,`option1`,`option2`,`option3`,`option4`,`correct_answer`,`answer_num`,`correct_num`) values (0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(1,1,'选择','网状模型的数据结构是（ ）','树','图','栈','堆','图',0,0),(2,1,'选择','层次模型的数据结构是（ ）','树','图','栈','堆','树',0,0),(3,7,'选择','E-R图中，表示实体型的图形是（ ）','矩形','棱形','椭圆形','直线','矩形',0,0),(4,7,'选择','E-R图中，表示属性的图形是（ ）','矩形','棱形','椭圆形','直线','椭圆形',0,0),(5,2,'选择','关系模式R(U,D,dom,F)，表示属性集合的是（ ）','U','D','dom','F','U',0,0),(6,6,'选择','2NF是在1NF的基础上，消除了非主属性对码的（ ）','部分函数依赖','传递函数依赖','多值依赖','连接依赖','部分函数依赖',0,0),(7,6,'选择','3NF是在2NF的基础上，消除了非主属性对码的（ ）','部分函数依赖','传递函数依赖','多值依赖','连接依赖','传递函数依赖',0,0),(8,1,'选择','表属于数据库三级模式中的（ ）','模式','物理模式','内模式','外模式','模式',0,0),(9,1,'选择','视图属于数据库三级模式中的（ ）','模式','物理模式','内模式','外模式','外模式',0,0),(10,2,'选择','关系是一张二维表，其中一行在某一列上的值对应的概念是（ ）','分量','属性','元祖','关系','分量',0,0),(11,2,'选择','关系是一张二维表，其中一行对应的概念是（ ）','分量','属性','元祖','关系','元组',0,0),(12,11,'选择','如果事务T对数据对象D施加了共享锁S，则事务T对D可进行的操作是（ ）','只能读不能写','只能写不能读','可读可写','不能读和写','只能读不能写',0,0),(13,11,'选择','如果事务T对数据对象D施加了排他锁X，则事务T对D可进行的操作是（ ）','只能读不能写','只能写不能读','可读可写','不能读和写','不能读和写',0,0),(14,3,'选择','下列关键字打头的语句，不属于DML的是（ ）','CREATE','INSERT','DELETE','UPDATE','CREARTE',0,0),(15,3,'选择','下列关键字打头的语句，属于DDL的是（ ）','CREATE','INSERT','DELETE','UPDATE','CREATE',0,0),(16,7,'选择','数据库物理结构设计的成果是（ ）','数据模型','逻辑模型','物理模型','概念模型','物理模型',0,0),(17,7,'选择','数据库概念结构设计的成果是（ ）','数据模型','逻辑模型','物理模型','概念模型','概念模型',0,0),(18,9,'选择','关系数据库的代数优化中，应尽早执行（ ）','笛卡尔积','选择','投影','连接','选择',0,0),(19,3,'选择','在关系数据库中，null表示（ ）','不确定','空字符串','空格','0','不确定',0,0),(20,3,'选择','在存在下列关键字的SQL语句中，不可能出现Where子句的是（ ）。','Update','Delete','nsert','Alter','Alter',0,0),(21,3,'选择','在查询语句的Where子句中，如果出现了“age Between 30 and 40”,这个表达式等','age>=30 and age<=40','age>=30 or age<=40','age>30 and age<40','age>30 or age<40','age>=30 and age<=40',0,0),(22,5,'选择','如果要在一张管理职工工资的表中限制工资的输入范围，应使用（ ）约束。','PRIMARY KEY','FOREIGN KEY','unique','check','check',0,0),(23,10,'选择','记录数据库事务的每一次更新操作信息的文件是（ ）。','数据文件','索引文件','辅助数据文件','日志文件','日志文件',0,0),(24,3,'选择','要查询XSH数据库CP表中产品名含有“冰箱”的产品情况，可用（ ）命令。','SELECT * FROM CP WHERE 产品名称 LIKE ‘冰箱’','SELECT * FROM XSH WHERE 产品名称 LIKE ‘冰箱’','SELECT * FROM CP WHERE 产品名称 LIKE ‘%冰箱%’','SELECT * FROM CP WHERE 产品名称=‘冰箱’','SELECT * FROM CP WHERE 产品名称 LIKE ‘%冰箱%’',0,0),(25,7,'选择','设有储蓄所和储户两个实体，储蓄所有多个储户，储户能够在多个储蓄所存取款，储蓄所与储户之间是（ ）。','一对一的联系','一对多的联系','多对一的联系','多对多的联系','多对多的联系',0,0),(26,3,'选择','SQL的聚集函数COUNT、SUM、AVG、MAX、MIN不允许出现在查询语句的（ ）子句中。','SELECT','HAVING','GROUP BY……HAVING','WHERE','GROUP BY……HAVING',0,0),(27,3,'选择','列值为空值（NULL），则说明这一列（ ）。','数值为0','数值为空格','数值是未知的','不存在','数值是未知的',0,0),(28,1,'选择','数据库的数据一般存放在（ ）中。','内存','CPU','寄存器','磁盘','磁盘',0,0),(29,3,'选择','在SELECT语句的WHERE子句的条件表达式中，可以匹配0个到多个字符的通配符是（ ）。','*','%','_','?','%',0,0),(30,3,'选择','下面不属于数据定义功能的SQL语句是（ ）。','CREATE TABLE','CREATE CURSOR','UPDATE','ALTER TABLE','UPDATE',0,0),(31,2,'选择','假如有两个表的连接是这样的： table_1 INNER JOIN table_2 其中table_','包括table_1中的所有行，不包括table_2的不匹配行','包括table_2中的所有行，不包括table_1的不匹配行','包括和两个表的所有行','只包括table_1和table_2满足条件的行','只包括table_1和table_2满足条件的行',0,0),(32,3,'选择','对视图的描述错误的是：（ ）。','是一张虚拟的表','在存储视图时存储的是视图的定义','在存储视图时存储的是视图中的数据','可以像查询表一样来查询视图','在存储视图时存储的是视图中的数据',0,0),(33,3,'选择','在SQL语言中，若要修改某张表的结构，应该使用的修改关键字是（ ）。','ALTER','UPDATE','UPDAET','ALLTER','ALTER',0,0),(34,3,'选择','数据库管理系统中，能实现对数据库中的数据进行插入、修改、删除的功能称为（ ）。','数据查询功能','数据定义功能','数据操纵功能','数据控制功能','数据操纵功能',0,0),(35,5,'选择','在关系模型中，实现“关系中不允许出现相同的元组”的约束是通过( )。','候选键','主键','外键','超键','主键',0,0),(36,5,'选择','关系数据库中，实现表与表之间的联系是通过 （ ）。','实体完整性规则','参照完整性规则','用户定义完整性规则','触发器','参照完整性规则',0,0),(37,7,'选择','设有部门和职员两个实体，每个职员只能属于一个部门，一个部门可以有多名职员，则部门与职员实体之间是( ','一对一的联系','一对多的联系','多对一的联系','多对多的联系','一对多的联系',0,0),(38,5,'选择','如果指定参照完整性的删除规则为“级联”，则当删除父表中的记录时（ ）。','系统自动备份父表中被删除记录到一个新表中','若子表中有相关记录，则禁止删除父表中记录','会自动删除子表中所有相关记录','不作参照完整性检查','删除父表记录与子表无关,会自动删除子表中所有相关记录',0,0),(39,11,'选择','解决并发操作带来的数据不一致问题普遍采用（ ）技术。','封锁','存取控制','恢复','协商','封锁',0,0),(40,10,'选择','若系统在运行过程中，由于某种原因，造成系统停止运行，致使事务在执行过程中以非控制方式终止，这时内存中','事务故障','系统故障','介质故障','计算机病毒','系统故障',0,0),(41,10,'选择','（ ）是DBMS的基本单位，它是用户定义的一组逻辑一致的程序序列。','程序','命令','事务','文件','事务',0,0),(42,10,'选择','事物的四个特性不包括（ ）。','原子性','一致性','持续性','即时性','即时性',0,0),(43,10,'选择','数据库恢复的基础是利用转储的冗余数据。这些转储的冗余数据包括（ ）。','数据字典、应用程序、审计档案、数据库后备副本','数据字典、应用程序、日志文件、审计档案','日志文件、数据库后备副本','数据字典、应用程序、数据库后备副本','日志文件、数据库后备副本',0,0),(44,10,'选择','若系统在运行过程中，由于某种硬件故障，使存储在外存上的数据部分损失或全部损失，这种情况称为（ ）。','事务故障','系统故障','介质故障','计算机病毒','介质故障',0,0),(45,11,'选择','关于“死锁”，下列说法中正确的是（ ）。','死锁是操作系统中的问题，数据库操作中不存在','在数据库操作中防止死锁的方法是禁止两个用户同时操作数据库','当两个用户竞争相同资源时不会发生死锁','只有出现并发操作时，才有可能出现死锁','只有出现并发操作时，才有可能出现死锁',0,0),(46,4,'选择','下列不属于实现数据库系统安全性的主要技术和方法是（ ）。','存取控制技术','视图技术','审计技术','出入机房登记和加锁','出入机房登记和加锁',0,0),(47,1,'选择','要保证数据库的逻辑数据独立性，需要修改的是（ ）。','模式与外模式之间的映射','模式与内模式之间的映射','模式','三级模式','模式与外模式之间的映射',0,0),(48,1,'选择','关系数据模型是目前最重要的一种数据模型，它的三个要素分别是（ ）。','实体完整性、参照完整性、用户自定义完整性','数据结构、关系操作、完整性约束','数据增加、数据修改、数据查询','外模式、模式、内模式','数据结构、关系操作、完整性约束',0,0),(49,1,'选择','下述（ ）不是DBA数据库管理员的职责 。','完整性约束说明','定义数据库模式','数据库安全','数据库管理系统设计','数据库管理系统设计',0,0),(50,2,'选择','假设有关系R和S，关系代数表达式R－（R－S）表示的是（ ）。','R∩S','R∪S','R－S','R×S','R∩S',0,0),(51,2,'判断','超码一定是候选码。','','','','','错',0,0),(52,2,'判断','候选码一定是超码。','','','','','对',0,0),(53,6,'判断','数据库中尽量减少冗余。','','','','','对',0,0),(54,6,'判断','数据库中消除一切数据冗余。','','','','','错',0,0),(55,2,'判断','关系的元祖具有顺序无关性。','','','','','对',0,0),(56,2,'判断','关系的列具有顺序无关性。','','','','','对',0,0),(57,2,'判断','模式是关系的集合。','','','','','错',0,0),(58,2,'判断','关系数据库是关系的集合。','','','','','对',0,0),(59,6,'判断','全码的1NF一定是BCNF。','','','','','对',0,0),(60,6,'判断','单码的1NF一定是2NF。','','','','','对',0,0),(61,2,'判断','基本的关系运算是：并、差、积、选择、投影。','','','','','对',0,0),(62,2,'判断','基本的关系运算是：并、交、积、选择、投影。','','','','','错',0,0),(63,1,'判断','数据库系统就是数据库管理系统。','','','','','错',0,0),(64,11,'判断','冲突可串行化调度一定是可串行化调度。','','','','','对',0,0),(65,11,'判断','可串行化调度一定是冲突可串行化调度。','','','','','错',0,0),(66,11,'判断','遵守两端锁协议的调度一定是可串行化调度。','','','','','对',0,0),(67,11,'判断','可串行化调度一定是遵守两端锁协议。','','','','','错',0,0),(68,6,'判断','2NF是在1NF的基础上，消除了非主属性对码的传递函数依赖。','','','','','错',0,0),(69,1,'判断','在数据库的三级模式结构中内模式可以有多个。','','','','','错',0,0),(70,1,'判断','数据独立性指数据的存储于应用程序无关，数据存储结构的改变不影响应用程序的正常运行。','','','','','对',0,0),(71,1,'判断','三级模式间存在三个映射关系。','','','','','错',0,0),(72,2,'判断','用二维表来表示实体之间联系的模型称为网状模型。','','','','','错',0,0),(73,1,'判断','DBMS不需要操作系统的支持就可以实现其功能。','','','','','错',0,0),(74,7,'判断','在E-R图中，用来表示属性的图形是椭圆形。','','','','','对',0,0),(75,7,'判断','关系模型是目前最常用的数据模型。','','','','','对',0,0),(76,6,'判断','消除了部分函数依赖的1nf的关系模式必是2nf。','','','','','对',0,0),(77,2,'判断','数据表的关键字用于唯一标识一个记录，每个表必须具有一个关键字，主关键字只能由一个字段组成。','','','','','错',0,0),(78,7,'判断','E-R图是由实体、联系和属性3要素组成的。','','','','','对',0,0),(79,2,'判断','关系数据库是用树结构来表示实体之间的联系的。','','','','','错',0,0),(80,2,'判断','空值不同于空字符串或数值零，通常表示未填写、未知（Unknown）、不可用或将在以后添加的数据。','','','','','对',0,0),(81,3,'判断','删除表时，与该表相关联的规则和约束不会被删除。','','','','','错',0,0),(82,3,'判断','SELECT查询数据时，如果使用右连接，则是限制右边表的记录。','','','','','错',0,0),(83,3,'判断','创建视图时不能使用ORDER BY子句。','','','','','对',0,0),(84,3,'判断','可以在表或临时表上创建视图。','','','','','错',0,0),(85,2,'判断','外键的值唯一的标识了表中的一行记录。','','','','','错',0,0),(86,11,'判断','事务死锁后,不用关机也可以解除死锁。','','','','','对',0,0),(87,8,'判断','存储过程在每次执行前都需要编译。','','','','','错',0,0),(88,8,'判断','存储过程允许嵌套，即在一个存储过程中可以调用其他存储过程。','','','','','对',0,0),(89,1,'判断','数据管理是对数据进行分类，组织，编码，存储，检索和维护，是对数据处理的中心问题。','','','','','对',0,0),(90,2,'判断','关系数据操作的操作对象是关系但操作结果不是关系。','','','','','错',0,0),(91,7,'判断','一个工人可以加工多种零件，每一种零件可以由不同的工人来加工。则工人和零件之间为1：N的联系。','','','','','错',0,0),(92,2,'判断','选择是从关系中挑选若干属性组成新的关系的运算。','','','','','错',0,0),(93,2,'判断','关系模型的外码既是本关系的主码，也是另一类关系的主码。','','','','','错',0,0),(94,11,'判断','事务T对关系R加上了排他锁，则T对关系R只能写不能读。','','','','','错',0,0),(95,10,'判断','数据库恢复是使被故障破坏掉的数据恢复到故障前的某种数据一致的状态。','','','','','对',0,0),(96,7,'判断','概念设计依赖于具体的数据库管理系统。','','','','','错',0,0),(97,10,'判断','如果事务结束，就使用SQL语句的COMMIT，使数据恢复到开始之前的状态。','','','','','错',0,0),(98,8,'判断','游标就是用循环控制把主语言的集合操作转化为SQL的单记录操作。','','','','','错',0,0),(99,10,'判断','事务的原子性是指整个事务要么都执行，要么都不执行。','','','','','对',0,0),(100,6,'判断','设X→Y是关系模型R的一个函数依赖，如果存在X的真子集X\'使得X\'→Y成立，则称Y部分依赖于X。','','','','','对',0,0),(101,1,'填空','填空题测试题目1',NULL,NULL,NULL,NULL,'填空题测试题答案1',0,0),(102,2,'填空','填空题测试题目2',NULL,NULL,NULL,NULL,'填空题测试题答案2',0,0),(103,3,'填空','填空题测试题目3',NULL,NULL,NULL,NULL,'填空题测试题答案3',0,0),(104,4,'填空','填空题测试题目4',NULL,NULL,NULL,NULL,'填空题测试题答案4',0,0),(105,5,'填空','填空题测试题目5',NULL,NULL,NULL,NULL,'填空题测试题答案5',0,0),(106,6,'填空','填空题测试题目6',NULL,NULL,NULL,NULL,'填空题测试题答案6',0,0),(107,7,'填空','填空题测试题目7',NULL,NULL,NULL,NULL,'填空题测试题答案7',0,0),(108,8,'填空','填空题测试题目8',NULL,NULL,NULL,NULL,'填空题测试题答案8',0,0),(109,9,'填空','填空题测试题目9',NULL,NULL,NULL,NULL,'填空题测试题答案9',0,0),(110,10,'填空','填空题测试题目10',NULL,NULL,NULL,NULL,'填空题测试题答案10',0,0),(111,11,'填空','填空题测试题目11',NULL,NULL,NULL,NULL,'填空题测试题答案11',0,0),(112,1,'问答','问答题测试题目1',NULL,NULL,NULL,NULL,'问答题测试题答案1',0,0),(113,2,'问答','问答题测试题目2',NULL,NULL,NULL,NULL,'问答题测试题答案2',0,0),(114,3,'问答','问答题测试题目3',NULL,NULL,NULL,NULL,'问答题测试题答案3',0,0),(115,4,'问答','问答题测试题目4',NULL,NULL,NULL,NULL,'问答题测试题答案4',0,0),(116,5,'问答','问答题测试题目5',NULL,NULL,NULL,NULL,'问答题测试题答案5',0,0),(117,6,'问答','问答题测试题目6',NULL,NULL,NULL,NULL,'问答题测试题答案6',0,0),(118,7,'问答','问答题测试题目7',NULL,NULL,NULL,NULL,'问答题测试题答案7',0,0),(119,8,'问答','问答题测试题目8',NULL,NULL,NULL,NULL,'问答题测试题答案8',0,0),(120,9,'问答','问答题测试题目9',NULL,NULL,NULL,NULL,'问答题测试题答案9',0,0),(121,10,'问答','问答题测试题目10',NULL,NULL,NULL,NULL,'问答题测试题答案10',0,0),(122,11,'问答','问答题测试题目11',NULL,NULL,NULL,NULL,'问答题测试题答案11',0,0);

/*Table structure for table `set_questions` */

DROP TABLE IF EXISTS `set_questions`;

CREATE TABLE `set_questions` (
  `paper_id` int(11) NOT NULL,
  `question_id` int(11) NOT NULL,
  PRIMARY KEY (`paper_id`,`question_id`),
  KEY `question_id` (`question_id`),
  CONSTRAINT `set_questions_ibfk_1` FOREIGN KEY (`paper_id`) REFERENCES `papers` (`paper_id`),
  CONSTRAINT `set_questions_ibfk_2` FOREIGN KEY (`question_id`) REFERENCES `questions` (`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `set_questions` */

insert  into `set_questions`(`paper_id`,`question_id`) values (1,1),(1,2),(2,3),(2,4),(1,5),(2,6),(2,7),(1,8),(1,9),(1,10),(1,11),(3,12),(3,13),(1,14),(1,15),(2,16),(2,17),(3,18),(1,19),(1,20),(1,21),(2,22),(3,23),(1,24),(2,25),(1,26),(1,27),(1,28),(1,29),(1,30),(1,31),(1,32),(1,33),(1,34),(2,35),(2,36),(2,37),(2,38),(3,39),(3,40),(3,41),(3,42),(3,43),(3,44),(3,45),(2,46),(1,47),(1,48),(1,49),(1,50),(1,51),(1,52),(2,53),(2,54),(1,55),(1,56),(1,57),(1,58),(2,59),(2,60),(1,61),(1,62),(3,64),(3,65),(3,66),(3,67),(2,68),(1,69),(1,70),(1,71),(1,72),(1,73),(2,74),(2,75),(2,76),(1,77),(3,86),(3,87),(3,88),(3,94),(3,95),(3,97);

/*Table structure for table `sp` */

DROP TABLE IF EXISTS `sp`;

CREATE TABLE `sp` (
  `student_id` varchar(20) NOT NULL,
  `paper_id` int(11) NOT NULL,
  `grade` tinyint(4) DEFAULT NULL,
  PRIMARY KEY (`student_id`,`paper_id`),
  KEY `paper_id` (`paper_id`),
  CONSTRAINT `sp_ibfk_1` FOREIGN KEY (`student_id`) REFERENCES `students` (`student_id`),
  CONSTRAINT `sp_ibfk_2` FOREIGN KEY (`paper_id`) REFERENCES `papers` (`paper_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `sp` */

insert  into `sp`(`student_id`,`paper_id`,`grade`) values ('201630541210',1,91);

/*Table structure for table `sq_done` */

DROP TABLE IF EXISTS `sq_done`;

CREATE TABLE `sq_done` (
  `student_id` varchar(20) DEFAULT NULL,
  `paper_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `commit_answer` varchar(512) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `sq_done` */

/*Table structure for table `st` */

DROP TABLE IF EXISTS `st`;

CREATE TABLE `st` (
  `teacher_id` varchar(20) NOT NULL,
  `class_name` varchar(20) NOT NULL,
  `class_grade` char(5) NOT NULL,
  PRIMARY KEY (`teacher_id`,`class_name`,`class_grade`),
  CONSTRAINT `st_ibfk_1` FOREIGN KEY (`teacher_id`) REFERENCES `teachers` (`teacher_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `st` */

insert  into `st`(`teacher_id`,`class_name`,`class_grade`) values ('3561782890912','计算机联合班','2016级'),('9081283712368','网络工程班','2016级'),('912379173132','信息安全班','2016级');

/*Table structure for table `student_exam` */

DROP TABLE IF EXISTS `student_exam`;

CREATE TABLE `student_exam` (
  `student_id` varchar(20) NOT NULL,
  `paper_id` varchar(20) NOT NULL,
  `begin_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `end_time` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`student_id`,`paper_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `student_exam` */

/*Table structure for table `students` */

DROP TABLE IF EXISTS `students`;

CREATE TABLE `students` (
  `student_id` varchar(20) NOT NULL,
  `student_name` varchar(20) DEFAULT NULL,
  `class_name` varchar(20) DEFAULT NULL,
  `class_grade` char(5) DEFAULT NULL,
  `student_password` varchar(20) DEFAULT '111111',
  `sex` varchar(2) DEFAULT NULL,
  `institute` varchar(20) DEFAULT NULL,
  `address` varchar(200) DEFAULT NULL,
  `birthdate` date DEFAULT NULL,
  `phone` varchar(11) DEFAULT NULL,
  `e_mail` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`student_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `students` */

insert  into `students`(`student_id`,`student_name`,`class_name`,`class_grade`,`student_password`,`sex`,`institute`,`address`,`birthdate`,`phone`,`e_mail`) values ('1000','bb','网络工程班','2016级','111111','女','计算机',NULL,NULL,NULL,NULL),('10101010111','天天','网络工程班','2018级','111111','女','计算机',NULL,NULL,NULL,NULL),('2013131313','kao','网络工程班','2016级','111111','女','计算机',NULL,NULL,NULL,NULL),('201430541678','李智豪','信息安全班','2014级','111111','女','计算机科学与工程学院','华南理工大学大学城校区C5-200','1985-09-14','17235742344','lzh@edu.scut.com'),('201530541371','何亿','信息安全班','2015级','111111','女','计算机科学与工程学院','华南理工大学大学城校区C5-200','1988-11-16','17235742344','hy@edu.scut.com\r'),('201530541418','胡景铨','信息安全班','2015级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-303','1984-08-01','17235742344','hjq@edu.scut.com\r'),('201530541487','黄喜全','信息安全班','2015级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-302','1987-03-14','17235742344','hxq@edu.scut.com\r'),('201530542521','赵菲苑','信息安全班','2015级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-302','1985-12-01','17235742344','zfw@edu.scut.com'),('201630311042','陈浩鑫','网络工程班','2016级','111111','女','计算机科学与工程学院','华南理工大学大学城校区C5-200','1984-08-28','15912379897','chx@edu.scut.com\r'),('201630471586','邱伟峰','网络工程班','2016级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-301','1986-01-02','18593695297','qwf@edu.scut.com\r'),('201630541043','陈海康','计算机联合班','2016级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-303','1985-05-01','17235742344','chk@edu.scut.com\r'),('201630541128','陈若晖','信息安全班','2016级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-301','1988-04-18','17235742344','crh@edu.scut.com\r'),('201630541210','邓勇达','计算机联合班','2016级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-303','1985-10-15','17235742344','dyd@edu.scut.com'),('201630541364','何杏萍','网络工程班','2016级','111111','女','计算机科学与工程学院','华南理工大学大学城校区C5-','1988-12-23','17235742344','hxp@edu.scut.com'),('201630541654','李心妍','计算机联合班','2016级','111111','女','计算机科学与工程学院','华南理工大学大学城校区C5-200','1984-08-24','17235742344','lxy@edu.scut.com\r'),('201630541661','李雨键','网络工程班','2016级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-300','1988-10-28','17235742344','lyj@edu.scut.com\r'),('201630541746','林世畅','网络工程班','2016级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-301','1984-05-23','17235742344','lsc@edu.scut.com\r'),('201630541807','刘俊彦','计算机联合班','2016级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-304','1986-04-01','17235742344','ljy@edu.scut.com\r'),('201630541838','吕扬','网络工程班','2016级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-300','1985-08-15','18945673735','ly@edu.scut.com\r'),('201630542156','吴伟斌','网络工程班','2016级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-300','1984-03-15','17963782484','wwb@edu.scut.com\r'),('201630542262','杨晓虹','网络工程班','2016级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-300','1988-11-25','15262357264','yxh@edu.scut.com\r'),('201630542286','杨心语','计算机联合班','2016级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-305','1987-09-08','17235742344','yxy@edu.scut.com\r'),('201630542415','张朝晖','计算机联合班','2016级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-304','1984-03-09','17235742344','zzh@edu.scut.com\r'),('201630542484','张智杰','计算机联合班','2016级','111111','女','计算机科学与工程学院','华南理工大学大学城校区C5-200','1987-06-05','17235742344','zzj@edu.scut.com\r'),('201630542545','赵伟杰','计算机联合班','2016级','111111','女','计算机科学与工程学院','华南理工大学大学城校区C5-200','1987-02-21','17235742344','zwy@edu.scut.com\r'),('201630542613','郑晓燕','计算机联合班','2016级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-304','1985-01-25','17235742344','zxy@edu.scut.com\r'),('201636061248','柯皓文','网络工程班','2016级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-301','1988-09-23','17235742344','khw@edu.scut.com\r'),('201636541429','胡顺宏','网络工程班','2016级','111111','女','计算机科学与工程学院','华南理工大学大学城校区C5-200','1988-02-01','15583946736','hsh@edu.scut.com\r'),('201692450584','黄琳','计算机联合班','2016级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-304','1984-05-04','17235742344','hl@edu.scut.com\r'),('201730541111','陈润森','信息安全班','2017级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-302','1986-02-25','17235742344','crs@edu.scut.com\r'),('201730542620','郑梓悫','信息安全班','2017级','111111','女','计算机科学与工程学院','华南理工大学大学城校区C5-200','1986-11-11','17235742344','zxl@edu.scut.com\r'),('201830541067','陈嘉健','信息安全班','2018级','111111','男','计算机科学与工程学院','华南理工大学大学城校区C12-302','1988-02-11','17235742344','cjj@edu.scut.com\r');

/*Table structure for table `teachers` */

DROP TABLE IF EXISTS `teachers`;

CREATE TABLE `teachers` (
  `teacher_id` varchar(20) NOT NULL,
  `teacher_name` varchar(20) DEFAULT NULL,
  `teacher_password` varchar(20) DEFAULT '222222',
  `sex` varchar(2) DEFAULT NULL,
  `institute` varchar(20) DEFAULT NULL,
  `address` varchar(200) DEFAULT '无',
  `birthdate` date DEFAULT '1000-01-01',
  `phone` varchar(11) DEFAULT '无',
  `e_mail` varchar(50) DEFAULT '无',
  PRIMARY KEY (`teacher_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `teachers` */

insert  into `teachers`(`teacher_id`,`teacher_name`,`teacher_password`,`sex`,`institute`,`address`,`birthdate`,`phone`,`e_mail`) values ('0','0','222222','0','111','无','1000-01-01','无','0'),('100001','1','222222','男','计算机','无','1000-01-01','无','无'),('2011111111','aaa','222222','男','计算机','无','1000-01-01','无','无'),('201630600015','唐五',NULL,'男','计算机科学与工程学院','家里','1000-01-01','无','201630600015'),('201630600016','唐六',NULL,'女','计算机科学与工程学院','无','1000-01-01','无','无'),('201630600017','唐七',NULL,'男','计算机科学与工程学院','无','1000-01-01','无','无'),('2016333333333','唐八',NULL,'男','计算机','无','1000-01-01','无','无'),('201666688800','唐五','222222','男','计算机科学与工程学院','无','1000-01-01','无','无'),('3561782890912','刘某','222222','男','计算机科学与工程学院','华南理工大学大学城校区D1-555','1977-07-25','13593682977','liu@edu.scut.com'),('9081283712368','范跑跑','222222','男','计算机科学与工程学院','华南理工大学大学城校区D1-312','1974-02-04','17938259642','paopao@edu.scut.com\r'),('912379173132','周某','222222','女','计算机科学与工程学院','华南理工大学大学城校区D2-334','1980-12-15','16828563795','zhou@edu.scut.com\r');

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
